{"ast":null,"code":"import fetch from \"isomorphic-unfetch\";\nimport Router from \"next/router\";\nexport async function myGet(url, ctx) {\n  var _ctx$req;\n\n  const cookie = (_ctx$req = ctx.req) === null || _ctx$req === void 0 ? void 0 : _ctx$req.headers.cookie;\n  const response = await fetch(url, {\n    headers: {\n      cookie: cookie\n    }\n  });\n\n  if (response.status === 401 && !ctx.req) {\n    Router.replace(\"/login\");\n    return {};\n  }\n\n  if (response.status === 401 && ctx.req) {\n    var _ctx$res, _ctx$res2;\n\n    (_ctx$res = ctx.res) === null || _ctx$res === void 0 ? void 0 : _ctx$res.writeHead(302, {\n      Location: \"http://localhost:3000/login\"\n    });\n    (_ctx$res2 = ctx.res) === null || _ctx$res2 === void 0 ? void 0 : _ctx$res2.end();\n    return;\n  }\n\n  const json = await response.json();\n  return json;\n}","map":{"version":3,"sources":["/Users/daniel/Documents/development/NEXTJS/nextjs-auth/api/myGet.ts"],"names":["fetch","Router","myGet","url","ctx","cookie","req","headers","response","status","replace","res","writeHead","Location","end","json"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,oBAAlB;AAEA,OAAOC,MAAP,MAAmB,aAAnB;AAEA,OAAO,eAAeC,KAAf,CAAqBC,GAArB,EAAkCC,GAAlC,EAAwD;AAAA;;AAC3D,QAAMC,MAAM,eAAGD,GAAG,CAACE,GAAP,6CAAG,SAASC,OAAT,CAAiBF,MAAhC;AACA,QAAMG,QAAQ,GAAG,MAAMR,KAAK,CAACG,GAAD,EAAM;AAChCI,IAAAA,OAAO,EAAE;AACPF,MAAAA,MAAM,EAAEA;AADD;AADuB,GAAN,CAA5B;;AAMA,MAAIG,QAAQ,CAACC,MAAT,KAAoB,GAApB,IAA2B,CAACL,GAAG,CAACE,GAApC,EAAyC;AACvCL,IAAAA,MAAM,CAACS,OAAP,CAAe,QAAf;AACA,WAAO,EAAP;AACD;;AACD,MAAIF,QAAQ,CAACC,MAAT,KAAoB,GAApB,IAA2BL,GAAG,CAACE,GAAnC,EAAwC;AAAA;;AACtC,gBAAAF,GAAG,CAACO,GAAJ,sDAASC,SAAT,CAAmB,GAAnB,EAAwB;AACtBC,MAAAA,QAAQ,EAAE;AADY,KAAxB;AAGA,iBAAAT,GAAG,CAACO,GAAJ,wDAASG,GAAT;AACA;AACD;;AAED,QAAMC,IAAI,GAAG,MAAMP,QAAQ,CAACO,IAAT,EAAnB;AACA,SAAOA,IAAP;AACD","sourcesContent":["import fetch from \"isomorphic-unfetch\";\nimport { NextPageContext } from \"next\";\nimport Router from \"next/router\";\n\nexport async function myGet(url: string, ctx: NextPageContext) {\n    const cookie = ctx.req?.headers.cookie;\n    const response = await fetch(url, {\n      headers: {\n        cookie: cookie!,\n      },\n    });\n  \n    if (response.status === 401 && !ctx.req) {\n      Router.replace(\"/login\");\n      return {};\n    }\n    if (response.status === 401 && ctx.req) {\n      ctx.res?.writeHead(302, {\n        Location: \"http://localhost:3000/login\",\n      });\n      ctx.res?.end();\n      return;\n    }\n  \n    const json = await response.json();\n    return json;\n  }"]},"metadata":{},"sourceType":"module"}